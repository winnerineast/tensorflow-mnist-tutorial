trainingInput:
  scaleTier: BASIC_GPU
  hyperparameters:
    goal: MAXIMIZE
    hyperparameterMetricTag: accuracy
    maxTrials: 35
    maxParallelTrials: 7
    params:
      - parameterName: hp-conv1
        type: INTEGER
        minValue: 6
        maxValue: 11
        scaleType: UNIT_LINEAR_SCALE
      - parameterName: hp-conv2
        type: INTEGER
        minValue: 12
        maxValue: 23
        scaleType: UNIT_LINEAR_SCALE
      - parameterName: hp-conv3
        type: INTEGER
        minValue: 24
        maxValue: 48
        scaleType: UNIT_LINEAR_SCALE
# best:
#"trialId": "4",
#      "hyperparameters": {
#        "hp-conv1": "11",
#        "hp-conv2": "23",
#        "hp-conv3": "48"
#      },
#      "finalMetric": {
#        "trainingStep": "10000",
#        "objectiveValue": 0.993200004101
#      }
# best with batch norm:
#"trialId": "9",
#      "hyperparameters": {
#        "hp-conv1": "6",
#        "hp-conv3": "48",
#        "hp-conv2": "12"
#      },
#      "finalMetric": {
#        "trainingStep": "10000",
#        "objectiveValue": 0.994400024414
#      }
# Other params:
# three conv layers: with patch sizes 6x6 5x5 4x4
# dense layer: 200
# activation: relu
#
# comment: good results, the largest network wins.
# In a separate run I got 0.9927 from conv layers 12-24-32